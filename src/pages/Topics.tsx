
import { useState } from 'react';
import { useNavigate } from 'react-router-dom';
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
import { Input } from '@/components/ui/input';
import { Badge } from '@/components/ui/badge';
import { motion } from 'framer-motion';
import { Search, ChevronRight } from 'lucide-react';

interface Topic {
  id: string;
  title: string;
  description: string;
  wordsCount: number;
  difficulty: 'beginner' | 'intermediate' | 'advanced';
  progress: number;
  icon: string;
}

const mockTopics: Topic[] = [
  {
    id: 'work',
    title: '–†–æ–±–æ—Ç–∞',
    description: '–ü—Ä–æ—Ñ–µ—Å—ñ–π–Ω–∞ –ª–µ–∫—Å–∏–∫–∞ —Ç–∞ –æ—Ñ—ñ—Å–Ω–µ —Å–ø—ñ–ª–∫—É–≤–∞–Ω–Ω—è',
    wordsCount: 150,
    difficulty: 'intermediate',
    progress: 65,
    icon: 'üíº'
  },
  {
    id: 'travel',
    title: '–ü–æ–¥–æ—Ä–æ–∂—ñ',
    description: '–°–ª–æ–≤–Ω–∏–∫ –¥–ª—è –ø–æ–¥–æ—Ä–æ–∂–µ–π —Ç–∞ —Ç—É—Ä–∏–∑–º—É',
    wordsCount: 120,
    difficulty: 'beginner',
    progress: 80,
    icon: '‚úàÔ∏è'
  },
  {
    id: 'food',
    title: '–á–∂–∞',
    description: '–ö—É–ª—ñ–Ω–∞—Ä–Ω–∞ –ª–µ–∫—Å–∏–∫–∞ —Ç–∞ –Ω–∞–∑–≤–∏ —Å—Ç—Ä–∞–≤',
    wordsCount: 200,
    difficulty: 'beginner',
    progress: 45,
    icon: 'üçΩÔ∏è'
  },
  {
    id: 'family',
    title: '–°—ñ–º\'—è',
    description: '–†–æ–¥–∏–Ω–Ω—ñ —Å—Ç–æ—Å—É–Ω–∫–∏ —Ç–∞ –ø–æ–±—É—Ç–æ–≤–µ —Å–ø—ñ–ª–∫—É–≤–∞–Ω–Ω—è',
    wordsCount: 80,
    difficulty: 'beginner',
    progress: 90,
    icon: 'üë®‚Äçüë©‚Äçüëß‚Äçüë¶'
  },
  {
    id: 'technology',
    title: '–¢–µ—Ö–Ω–æ–ª–æ–≥—ñ—ó',
    description: 'IT-—Ç–µ—Ä–º—ñ–Ω–æ–ª–æ–≥—ñ—è —Ç–∞ —Å—É—á–∞—Å–Ω—ñ —Ç–µ—Ö–Ω–æ–ª–æ–≥—ñ—ó',
    wordsCount: 180,
    difficulty: 'advanced',
    progress: 30,
    icon: 'üíª'
  },
  {
    id: 'health',
    title: '–ó–¥–æ—Ä–æ–≤\'—è',
    description: '–ú–µ–¥–∏—á–Ω–∞ –ª–µ–∫—Å–∏–∫–∞ —Ç–∞ –∑–¥–æ—Ä–æ–≤–∏–π —Å–ø–æ—Å—ñ–± –∂–∏—Ç—Ç—è',
    wordsCount: 110,
    difficulty: 'intermediate',
    progress: 55,
    icon: 'üè•'
  }
];

const difficultyColors = {
  beginner: 'bg-green-100 text-green-800',
  intermediate: 'bg-yellow-100 text-yellow-800',
  advanced: 'bg-red-100 text-red-800'
};

const difficultyLabels = {
  beginner: '–ü–æ—á–∞—Ç–∫–æ–≤–∏–π',
  intermediate: '–°–µ—Ä–µ–¥–Ω—ñ–π', 
  advanced: '–ü—Ä–æ—Å—É–Ω—É—Ç–∏–π'
};

const Topics = () => {
  const [searchTerm, setSearchTerm] = useState('');
  const navigate = useNavigate();

  const filteredTopics = mockTopics.filter(topic =>
    topic.title.toLowerCase().includes(searchTerm.toLowerCase()) ||
    topic.description.toLowerCase().includes(searchTerm.toLowerCase())
  );

  const handleTopicClick = (topicId: string) => {
    navigate(`/exercise/${topicId}`);
  };

  return (
    <div className="min-h-screen p-6">
      <div className="max-w-6xl mx-auto">
        <motion.div
          initial={{ opacity: 0, y: -20 }}
          animate={{ opacity: 1, y: 0 }}
          transition={{ duration: 0.6 }}
          className="mb-8"
        >
          <h1 className="text-3xl font-bold text-gray-800 mb-2">
            –í–∏–±–µ—Ä–∏ —Ç–µ–º—É –¥–ª—è –≤–∏–≤—á–µ–Ω–Ω—è
          </h1>
          <p className="text-gray-600">
            –û–±–µ—Ä–∏ —Ü—ñ–∫–∞–≤—É —Ç–µ–º—É —Ç–∞ –ø–æ—á–Ω–∏ –≤–∏–≤—á–∞—Ç–∏ –Ω–æ–≤—ñ —Å–ª–æ–≤–∞
          </p>
        </motion.div>

        <motion.div
          initial={{ opacity: 0, y: 20 }}
          animate={{ opacity: 1, y: 0 }}
          transition={{ duration: 0.6, delay: 0.2 }}
          className="mb-8"
        >
          <div className="relative max-w-md">
            <Search className="absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 h-5 w-5" />
            <Input
              placeholder="–ü–æ—à—É–∫ —Ç–µ–º..."
              value={searchTerm}
              onChange={(e) => setSearchTerm(e.target.value)}
              className="pl-10 py-3 text-lg border-2 border-gray-200 focus:border-language-primary rounded-xl"
            />
          </div>
        </motion.div>

        <motion.div
          initial={{ opacity: 0 }}
          animate={{ opacity: 1 }}
          transition={{ duration: 0.8, delay: 0.4 }}
          className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6"
        >
          {filteredTopics.map((topic, index) => (
            <motion.div
              key={topic.id}
              initial={{ opacity: 0, y: 20 }}
              animate={{ opacity: 1, y: 0 }}
              transition={{ duration: 0.6, delay: 0.1 * index }}
              whileHover={{ scale: 1.02 }}
              whileTap={{ scale: 0.98 }}
            >
              <Card 
                className="cursor-pointer hover:shadow-lg transition-all duration-300 border-2 border-gray-100 hover:border-language-primary/30"
                onClick={() => handleTopicClick(topic.id)}
              >
                <CardHeader className="pb-3">
                  <div className="flex items-center justify-between">
                    <div className="text-3xl">{topic.icon}</div>
                    <ChevronRight className="h-5 w-5 text-gray-400" />
                  </div>
                  <CardTitle className="text-xl font-bold text-gray-800">
                    {topic.title}
                  </CardTitle>
                </CardHeader>
                <CardContent>
                  <p className="text-gray-600 mb-4 text-sm">
                    {topic.description}
                  </p>
                  
                  <div className="space-y-3">
                    <div className="flex items-center justify-between text-sm">
                      <span className="text-gray-500">–°–ª—ñ–≤: {topic.wordsCount}</span>
                      <Badge className={difficultyColors[topic.difficulty]}>
                        {difficultyLabels[topic.difficulty]}
                      </Badge>
                    </div>
                    
                    <div className="space-y-1">
                      <div className="flex justify-between text-sm">
                        <span className="text-gray-500">–ü—Ä–æ–≥—Ä–µ—Å</span>
                        <span className="font-medium text-language-primary">{topic.progress}%</span>
                      </div>
                      <div className="w-full bg-gray-200 rounded-full h-2">
                        <div 
                          className="bg-gradient-to-r from-language-primary to-language-accent h-2 rounded-full transition-all duration-300"
                          style={{ width: `${topic.progress}%` }}
                        />
                      </div>
                    </div>
                  </div>
                </CardContent>
              </Card>
            </motion.div>
          ))}
        </motion.div>

        {filteredTopics.length === 0 && (
          <motion.div
            initial={{ opacity: 0 }}
            animate={{ opacity: 1 }}
            className="text-center py-12"
          >
            <div className="text-6xl mb-4">üîç</div>
            <h3 className="text-xl font-medium text-gray-800 mb-2">
              –ù—ñ—á–æ–≥–æ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ
            </h3>
            <p className="text-gray-600">
              –°–ø—Ä–æ–±—É–π—Ç–µ –∑–º—ñ–Ω–∏—Ç–∏ –ø–æ—à—É–∫–æ–≤–∏–π –∑–∞–ø–∏—Ç
            </p>
          </motion.div>
        )}
      </div>
    </div>
  );
};

export default Topics;
